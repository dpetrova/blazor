@if (Basket.Orders.Any())
{
    <h1>@Title</h1>
    @foreach (var (pizza, pos) in Pizzas)
    {
        <PizzaItem Pizza="@pizza"
           ButtonTitle="Remove"
           ButtonClass="btn btn-danger"
           Selected="@(async (_) => await Selected.InvokeAsync(pos))" />
    }

    <div class="row">
        <div class="col"> Total:</div>
        <div class="col"> @TotalPrice </div>
        <div class="col"> </div>
    </div>
}

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public Basket Basket { get; set; }

    [Parameter]
    public EventCallback<int> Selected { get; set; }

    [Parameter]
    public decimal TotalPrice { get; set; }

    // get the pizza object is done through the GetPizzaFromId delegate
    [Parameter]
    public Func<int, Pizza> GetPizzaFromId { get; set; }

    public IEnumerable<(Pizza pizza, int pos)> Pizzas { get; set; }

    // gets called when the component’s parameters have been set
    // here we override it to build a list of (pizza, position) tuples
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        Pizzas = Basket.Orders.Select((id, pos) => (pizza: GetPizzaFromId(id), pos: pos));
        TotalPrice = Pizzas.Select(tuple => tuple.pizza.Price).Sum();
    }
}
