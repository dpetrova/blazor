@*inject service for invoking JS functions*@
@inject IJSRuntime js;

@*checbox for allowing/or not to manipulate movies*@
@*using data binding:*@
<label for="allowedToManipulate">Allowed to manipulate (using data binding)</label>
<input type="checkbox" @bind="allowedToManipulate" />
<br />

@*using onchange event:*@
<label for="allowedToManipulate">Allowed to manipulate (using onchange event)</label>
<input type="checkbox" @onchange="@(() => allowedToManipulate = !allowedToManipulate)" />

@*render list of movies*@
<GenericList List="Movies">
    @*pass content to be rendered in the component*@
    @*<span style="color: blue">Here we will display movies...</span>*@

    @*when have more than one content to pass use named tags:*@
    <LoadingTemplate>
        <span style="color: blue">Loading...</span>
    </LoadingTemplate>
    <NullTemplate>
        <span style="color: red">No records to display</span>
    </NullTemplate>
    <ItemTemplate Context="movie">
        @*use default context to access passed variable to generic render fragment*@
        @*<IndividualMovie Movie="context" DisplayButtons="allowedToManipulate" DeleteMovie="Delete" />*@

        @*access passed variable to generic render fragment as it set in Context*@
        <IndividualMovie Movie="movie" DisplayButtons="allowedToManipulate" DeleteMovie="Delete" />
    </ItemTemplate>
</GenericList>

<Confirmation @ref="confirmation" onCancel="CancelDelete" onConfirm="ConfirmDelete">
    <div>Are you sure to delete @targetMovie.Title ?</div>
</Confirmation>

@code {
    //data recieved from parent
    [Parameter]
    public List<Movie> Movies { get; set; }

    private bool allowedToManipulate = true;

    private Movie targetMovie;

    private void Delete(Movie movie)
    {
        targetMovie = movie;
        confirmation.Show();        
    }

    //create a reference to Confirmation dialog
    Confirmation confirmation;    

    private void ConfirmDelete()
    {
        Movies.Remove(targetMovie);
        confirmation.Hide();
        targetMovie = null;
        //js.Log($"The movie {targetMovie.Title} is deleted!");
        //await js.LogFromCustomJsFunction($"The movie {targetMovie.Title} is deleted!");
    }

    private void CancelDelete()
    {
        confirmation.Hide();
        targetMovie = null;
    }
}
